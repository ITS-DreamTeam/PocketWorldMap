// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PWMAPI.Contexts;

namespace PWMAPI.Migrations
{
    [DbContext(typeof(PWMContext))]
    [Migration("20190120203937_nameupade")]
    partial class nameupade
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PWMAPI.Entities.Marker", b =>
                {
                    b.Property<int>("MarkerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.Property<string>("IconUrl")
                        .HasMaxLength(512);

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(512);

                    b.Property<bool>("IsPublic");

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("Title")
                        .HasMaxLength(256);

                    b.Property<int>("UserId");

                    b.HasKey("MarkerId");

                    b.HasIndex("UserId");

                    b.ToTable("Markers");
                });

            modelBuilder.Entity("PWMAPI.Entities.PublicMap", b =>
                {
                    b.Property<int>("PublicMapId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1024);

                    b.Property<string>("Url")
                        .HasMaxLength(512);

                    b.Property<int>("UserId");

                    b.HasKey("PublicMapId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PublicMaps");
                });

            modelBuilder.Entity("PWMAPI.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PWMAPI.Entities.Marker", b =>
                {
                    b.HasOne("PWMAPI.Entities.User")
                        .WithMany("Markers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PWMAPI.Entities.PublicMap", b =>
                {
                    b.HasOne("PWMAPI.Entities.User", "User")
                        .WithOne("Map")
                        .HasForeignKey("PWMAPI.Entities.PublicMap", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
